apt-get update -y && apt update -y && apt-get upgrade -y && apt upgrade -y && apt install aptitude -y && aptitude full-upgrade -y

sh <(curl -L https://nixos.org/nix/install)  --daemon 

 . ~/.nix-profile/etc/profile.d/nix.sh

echo '. "$HOME/.nix-profile/etc/profile.d/nix.sh"' >> ~/.bashrc

which nix

sh <(curl -L https://nixos.org/nix/install)  --daemon

mkdir -p ~/.config/nix  

echo "experimental-features = nix-command  

flakes" >> ~/.config/nix/nix.conf 

nix-channel --add https://nixos.org/channels/nixos-24.05 nixpkgs

nix-channel --update 

nix-channel --list




nano /root/.config/nix/nix.conf

experimental-features = nix-command flakes




nano shell.nix

{ pkgs ? import <nixpkgs> {} }:

pkgs.mkShell {
  buildInputs = [
    pkgs.nodejs_20
  ];
}



nix-shell

node --version

which node 

nix shell nixpkgs#go_1_21 


What /nix/store is
It’s a content-addressed store where Nix puts all packages, build results, and dependencies.


nix-collect-garbage -d

Because the Nix store grows over time, you can clean up unused packages  with:  nix-collect-garbage 





nano shell.nix



{ pkgs ? import <nixpkgs> {} }:

pkgs.mkShell {
  buildInputs = [
    pkgs.nodejs_20
    pkgs.yarn
  ];
}


nix-shell




let
  pkgs = import <nixpkgs> {};
in
pkgs.mkShell {
  buildInputs = [
    pkgs.nodejs_20
    pkgs.yarn
  ];
}






nix search nixpkgs nodejs 




nix-env -iA nixpkgs.nodejs_20


nix-env → Nix’s per-user package manager. Installs packages into your user profile (~/.nix-profile).
-iA → Install by attribute path.
-i = install
-A = attribute, e.g., nixpkgs.nodejs_20
Advantages: unambiguous, faster, works across channels.
Links the package from /nix/store into your ~/.nix-profile.








